<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
           http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
            ">

    <!--自动扫描-->
    <context:annotation-config />
    <context:component-scan base-package="com.java"/>
    <!--基于注解的aop需要加上该配置,基于XML配置文件的Aop该配置可不写-->
    <aop:aspectj-autoproxy/>


    <!--引用properties文件-->
    <util:properties id="dbConfig" location="classpath:jdbc.properties"></util:properties>

    <!--redis pool配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1024"/>
        <property name="maxIdle" value="200"/>
        <property name="maxWaitMillis" value="3000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="poolConfig" />
        <constructor-arg name="host" value="127.0.0.1" />
        <constructor-arg name="port" value="6371" />
        <constructor-arg name="timeout" value="3000" />
    </bean>



    <!--Spring Aop配置-->
    <bean id="aopXMLService" class="com.java.aop.AopXMLService"></bean>
    <aop:config>
        <aop:aspect id="aoptest" ref="aopXMLService">
            <aop:pointcut id="businessService" expression="execution(* com.java.aop.AopXmlTargetMethod.*(..)) || @annotation(com.java.annotation.AopAnnotation)"/>
            <aop:before pointcut-ref="businessService" method="doBefore"></aop:before>
            <aop:around pointcut-ref="businessService" method="doAround"></aop:around>
            <aop:after pointcut-ref="businessService" method="doAfter"></aop:after>
            <aop:after-returning pointcut-ref="businessService" method="afterReturn"></aop:after-returning>
        </aop:aspect>
    </aop:config>

    <!--数据源配置-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          lazy-init="default" autowire="default" destroy-method="close">
        <property name="driverClassName" value="#{dbConfig['jdbc.driverClassName']}"></property>
        <property name="url" value="#{dbConfig['jdbc.url']}"></property>
        <property name="username" value="#{dbConfig['jdbc.username']}"></property>
        <property name="password" value="#{dbConfig['jdbc.password']}"></property>
        <property name="maxWait" value="#{dbConfig['jdbc.maxwait']}"></property>
        <property name="maxActive" value="#{dbConfig['jdbc.maxActive']}"></property>
        <property name="maxIdle" value="#{dbConfig['jdbc.maxIdle']}" />
        <property name="validationQuery" value="#{dbConfig['jdbc.validationQuery']}"></property>
    </bean>

    <!-- mybatis 配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>
    <mybatis:scan base-package="com.java.repository"/>
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--&lt;!&ndash; 扫描com.java.repository这个包以及它的子包下的所有映射接口类 &ndash;&gt;-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
        <!--<property name="basePackage" value="com.java.repository"/>-->
    <!--</bean>-->

</beans>
